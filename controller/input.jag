<%

/* Author - mihil ranathunga
* email-mihil@wso2.com
* project-wso2 Hardware Repository
* interns UOM- 2014
*/

include("../model/inputModel.jag");

var dataStore=require("../store.json");
var dssUrl = dataStore.urlConfigurations.dssUrl;

response.contentType = 'text/javascript';

var verb = request.getMethod();
var data = request.getContent();
var uri = request.getRequestURI();
var param=request.getQueryString();

var log = new Log();

log.info(verb +'-URI: '+uri+'-Content:'+JSON.stringify(data)+', Parameters:'+JSON.stringify(param));

var callPath=uri.replace("/WSO2-HW-REPO/user/","");

var user_id = session.get("LOGGED_IN_USER");

if(uri != null) {

var uriMatcher = new URIMatcher(callPath);

    if(uriMatcher.match("/{operation}/")) {     
        var opr = uriMatcher.elements().operation;
    }
}

    /*
    if(uriMatcher.match("/{orderid}/")) {       
       // orderid = uriMatcher.elements().orderid;
    }
}
if(data != null ) {
    if(data.addition != null) {
        addition = data.addition;
    }
    if(data.status != null) {
        status = data.status;
    }
}

if (request.getParameter('operation') != null) {
    var opr = request.getParameter('operation');
} else {
    var opr = data.operation;
    var deviceID = data.deviceID;
}

if (data != null) {

}*/


if (verb == "POST") {


    if (opr == 'addDeviceRequest') {


        var addRequestObj = data.dev;

       // log.info(stringify(addRequestObj));

        var viewReqObj={'device_type':addRequestObj.device,'purpose':addRequestObj.purpose,'req':addRequestObj.req,'emp_id':user_id};

        var result=addNewRequest(viewReqObj);
        if(result={}){
        print(result);
        }
       
    } else if (opr == 'getDeviceDetails') {

        print(viewDeviceByID(deviceID));


    } 
    else if (opr == 'deleteRequest') {

        var request_id = data.req_id;

        //log.info(request_id);

        print(deleteRequest(request_id));


    }
    else if (opr == 'confirmRequest') {

        var request_id = data.req_id;

        print(confirmRequest(request_id));

    }



    else if (opr == 'getAccessories') {

        var result = viewAccessoryByDeviceID(deviceID);
        print(result);

    } else if (opr == 'upgradeHistory') {

      //log.info(viewUpgradeHistoryByDeviceID(deviceID));

      print(viewUpgradeHistoryByDeviceID(deviceID));

    }
    else if (opr == 'warrantyHistory') {

     // log.info(viewWarrantyByDeviceID(deviceID));

      print(viewWarrantyByDeviceID(deviceID,user_id));

    }
     else if (opr == 'getIssues') {

    //log.info(viewIssueHistoryByDeviceID(deviceID,user_id));
        print(viewIssueHistoryByDeviceID(deviceID,user_id));
    } else if(opr == 'getEmpIssues') {

    //log.info(viewIssueHistoryByDeviceID(deviceID,user_id));
        print(viewIssueHistoryByEmp(user_id));
    }

    else if (opr == 'addIssue') {
        
        var addIssueObj = data;

        addIssueObj.issue.emp_id=user_id;

        //log.info(addIssueObj);

        addIssue(addIssueObj.issue);
        print({
                    'information': 'issue reported successfully'
                }

        );
    }
    else if(opr =='editIssue'){


        var editIssueObj = data;

        //log.info(editIssueObj);

      editIssueObj.issue.emp_id=user_id;

       editIssue(editIssueObj.issue);


    }
      else if(opr =='deleteIssue'){


        var deleteIssueObj = data;

      deleteIssueObj.issue.emp_id=user_id;
      //log.info(deleteIssueObj);

       deleteIssue(deleteIssueObj.issue);

    }


}

if (verb == "GET" ) {

    if(opr == 'getUserID'){

       print({'user_id':user_id});

    }
    else if (opr == 'loadRequests') {

        var result=viewRequestsByUser(user_id);



        // if result has multiple entries it is returned as an array View requests results of type
        // {"requests":[{result1},{result2},{re...}]}

        if( Object.prototype.toString.call(result) === '[object Array]' ) {
 
            print({"requests":result});
        }
        else{
            print({"requests":[result]});
        }


    } else if (opr == 'loadDevices') {

        var result=viewDevicesByUser(user_id);

        // if result has multiple entries it is returned as an array View requests results of type
        // {"devices":[{result1},{result2},{re...}]}

        if( Object.prototype.toString.call(result) === '[object Array]' ) {
            print({"devices":result});
        }
        else{
            print({"devices":[result]});
        }


    }
    else if (opr == 'loadUserIssues') {

        var result=viewIssuesByUser(user_id);

        // if result has multiple entries it is returned as an array View issues results of type
        // {"issues":[{result1},{result2},{re...}]}

        if( Object.prototype.toString.call(result) === '[object Array]' ) {
            print({"issues":result});
        }
        else{
            print({"issues":[result]});
        }


    }
}

%>