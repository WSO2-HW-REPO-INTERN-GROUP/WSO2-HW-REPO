<%

include("../model/inputModel.jag");

var dataStore=require("../store.json");


var dssUrl = dataStore.urlEntries.dssUrl;
var serverPath = "http://localhost:9765/WSO2-HW-REPO";
response.contentType = 'text/javascript';

var verb = request.getMethod();
var data = request.getContent();
var uri = request.getRequestURI();


var log = new Log();

session.put('user-id','1');

if (request.getParameter('operation') != null) {
    var opr = request.getParameter('operation');
} else {
    var opr = parse(data).operation;
    var deviceID = parse(data).deviceID;
}

if (data != null) {

}



if (verb == "POST") {


    if (opr == 'addDeviceRequest') {

        var user_id = session.get('user-id');

        var addRequestObj = parse(data).dev;

        var viewReqObj={'device_type':addRequestObj.device,'purpose':addRequestObj.purpose,'req':addRequestObj.req,'emp_id':user_id};

        addNewRequest(viewReqObj);
       
    } else if (opr == 'getDeviceDetails') {

        print(viewDeviceByID(deviceID));


    } else if (opr == 'getAccessories') {

        var result = viewAccessoryByDeviceID(deviceID);

        if( Object.prototype.toString.call(result) === '[object Array]' ) {
            print(result);
        }
        else{
            print([result]);
        }

    } else if (opr == 'upgradeHistory') {


        print(viewUpgradeHistoryByDeviceID(deviceID));
    } else if (opr == 'getIssues') {


        print(viewIssueHistoryByDeviceID(deviceID));
    } else if (opr == 'addIssue') {

        var user_id = session.get('user-id');

        var addIssueObj = parse(data);

        addIssueObj.issue.emp_id=user_id;

        addIssue(addIssueObj.issue);
        print({
                    'information': 'issue reported successfully'
                }

        );
    }


}

if (verb == "GET") {


    if (opr == 'loadRequests') {

        var user_id = session.get('user-id');

        var result=viewRequestsByUser(user_id);



        // if result has multiple entries it is returned as an array View requests results of type
        // {"requests":[{result1},{result2},{re...}]}

        if( Object.prototype.toString.call(result) === '[object Array]' ) {
            print({"requests":result});
        }
        else{
            print({"requests":[result]});
        }




    } else if (opr == 'loadDevices') {

        var user_id = session.get('user-id');

        var result=viewDevicesByUser(user_id);

        // if result has multiple entries it is returned as an array View requests results of type
        // {"devices":[{result1},{result2},{re...}]}

        if( Object.prototype.toString.call(result) === '[object Array]' ) {
            print({"devices":result});
        }
        else{
            print({"devices":[result]});
        }


    }
}

%>