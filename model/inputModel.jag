<%

var dssUrl = "http://10.100.4.57:9763/services/HardewareRepo/";

function viewDeviceByID(deviceID) {

    var url = dssUrl + "GetDeviceByID";
    var rslt = get(url, {
        "device_id": deviceID
    }, {
        "Accept": "application/json"
    }, "json");
    log.info(rslt.data.BaseElement.Element);

    return rslt.data.BaseElement.Element;
}


function viewAccessoryByDeviceID(deviceID) {

   /* var url = dssUrl + "GetAccessoryByDeviceID";
    var rslt = get(url, {
        "acc_id": deviceID
    }, {
        "Accept": "application/json"
    }, "json");
    log.info(rslt.data.BaseElement.Element);


    return rslt.data.BaseElement.Element;

    */

    var accessories=[{"ID":"123","Serial":"AGGS5538GS544","Assigned Date":"2012/12/12","Type":"Battery"},{"ID":"123","Serial":"AGGS5538GS544","Assigned Date":"2012/12/12","Type":"Battery"}];

    return accessories;
}

function viewUpgradeHistoryByDeviceID(deviceID) {

    var url = dssUrl + "GetUpgradeHistoryByDeviceID";
    var rslt = get(url, {
        "upgd_id": deviceID
    }, {
        "Accept": "application/json"
    }, "json");
    log.info(rslt.data.BaseElement.Element);


    return rslt.data.BaseElement.Element;

}

function viewIssueHistoryByDeviceID(deviceID) {

    var url = dssUrl + "GetIssuesByDeviceID";
    var rslt = get(url, {
        "dev_id": deviceID
    }, {
        "Accept": "application/json"
    }, "json");
    log.info(rslt.data.BaseElement.Element);


    return rslt.data.BaseElement.Element;

}

function viewRequestsByUser(user_id) {


    var url = dssUrl+"GetRequestsByEmployee";
    var rslt=get(url,{"emp_id":user_id},{"Accept":"application/json"},"json");

    return rslt.data.BaseElement.Element;

}


function viewDevicesByUser(user_id) {

    var url = dssUrl+"GetDevicesByEmployee";
    var rslt=get(url,{"emp_id":user_id},{"Accept":"application/json"},"json");
    log.info(rslt.data.BaseElement.Element);


    return rslt.data.BaseElement.Element;

}

function addNewRequest(addReqObj) {

    log.info(stringify(addReqObj));
    var url = dssUrl+"AddDeviceRequest"
    var data=addReqObj;
    var headers = {Accept:"application/json" };
    var rslt=get(url,data,headers,'json',function(data,xhr){
    })
    log.info(rslt);

    //addIssue();
    //return rslt.data.BaseElement.Element;

}


function addIssue() {

    var url = dssUrl+"AddIssue"
    var data={'sts':"critical",'dev_id':"1",'emp_id':"1",'desc':"testing post",'date':"2014-01-01"};
    var headers = {Accept:"application/json" };
    var rslt=get(url,data,headers,'json',function(data,xhr){
    });
    log.info(rslt);

}

function addOrder(bookName, authName, bookType) {
    if (session.get("count") == null) {
        session.put("count", 0);
    }
    var orderIdx = session.get("count");

    var orderO = session.get("orders");
    if (orderO != null) {
        //orderIdx = orderO.length;
        var orderCount = session.get("count");
        orderCount++;
        session.put("count", orderCount);
        orderIdx = orderCount;
    }
    var hasBookType = bookdata.indexOf(bookType);


    if (hasBookType != null) {
        var orders;
        if (orderO != null) {
            var orderJson = session.get("orders"); // get order array from session
            orderJson.push(orderIdx); //push new order to the already retrieved orderlist
            session.put("orders", orderJson); // restore order list in session
        } else {
            session.put("orders", [0]);
        }
        var object = {
            "ORDER_ID": orderIdx,
            "BOOK-TYPE": bookType,
            "NAME": bookName,
            "AUTHOR": authName,
        };
        session.put("o" + orderIdx, object);
        //order is been taken
        var result = session.get("o" + orderIdx);
        print(result);
    } else {
        print({
            "Infor": "Sorry, Book Cannot be added"
        });
    }
}
%>